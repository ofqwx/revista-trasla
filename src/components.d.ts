/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


declare global {

  namespace StencilComponents {
    interface AdvertisingSpace {
      'imgSrc': string;
      'subtitle': string;
      'title': string;
    }
  }

  interface HTMLAdvertisingSpaceElement extends StencilComponents.AdvertisingSpace, HTMLStencilElement {}

  var HTMLAdvertisingSpaceElement: {
    prototype: HTMLAdvertisingSpaceElement;
    new (): HTMLAdvertisingSpaceElement;
  };
  interface HTMLElementTagNameMap {
    'advertising-space': HTMLAdvertisingSpaceElement;
  }
  interface ElementTagNameMap {
    'advertising-space': HTMLAdvertisingSpaceElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'advertising-space': JSXElements.AdvertisingSpaceAttributes;
    }
  }
  namespace JSXElements {
    export interface AdvertisingSpaceAttributes extends HTMLAttributes {
      'imgSrc'?: string;
      'subtitle'?: string;
      'title'?: string;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;